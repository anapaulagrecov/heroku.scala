package com.heroku.platform.api.client.spray

import com.heroku.platform.api._

import spray.json._

trait SprayJsonIgnoreNullBoilerplate extends DefaultJsonProtocol with ApiRequestJson {
  implicit lazy val FormatAccountmodelsUpdateAccountBody: JsonFormat[Account.models.UpdateAccountBody] = jsonFormat4(Account.models.UpdateAccountBody.apply)
  implicit lazy val FormatAccountmodelsChangeEmailAccountBody: JsonFormat[Account.models.ChangeEmailAccountBody] = jsonFormat2(Account.models.ChangeEmailAccountBody.apply)
  implicit lazy val FormatAccountmodelsChangePasswordAccountBody: JsonFormat[Account.models.ChangePasswordAccountBody] = jsonFormat2(Account.models.ChangePasswordAccountBody.apply)
  implicit lazy val FormatAccountFeaturemodelsUpdateAccountFeatureBody: JsonFormat[AccountFeature.models.UpdateAccountFeatureBody] = jsonFormat1(AccountFeature.models.UpdateAccountFeatureBody.apply)
  implicit lazy val FormatAddonmodelsAddonPlan: JsonFormat[Addon.models.AddonPlan] = jsonFormat2(Addon.models.AddonPlan.apply)
  implicit lazy val FormatAddonmodelsCreateAddonBody: JsonFormat[Addon.models.CreateAddonBody] = jsonFormat2(Addon.models.CreateAddonBody.apply)
  implicit lazy val FormatAddonmodelsUpdateAddonBody: JsonFormat[Addon.models.UpdateAddonBody] = jsonFormat1(Addon.models.UpdateAddonBody.apply)
  implicit lazy val FormatAppFeaturemodelsUpdateAppFeatureBody: JsonFormat[AppFeature.models.UpdateAppFeatureBody] = jsonFormat1(AppFeature.models.UpdateAppFeatureBody.apply)
  implicit lazy val FormatAppTransfermodelsAppTransferApp: JsonFormat[AppTransfer.models.AppTransferApp] = jsonFormat2(AppTransfer.models.AppTransferApp.apply)
  implicit lazy val FormatAppTransfermodelsCreateAppTransferBody: JsonFormat[AppTransfer.models.CreateAppTransferBody] = jsonFormat2(AppTransfer.models.CreateAppTransferBody.apply)
  implicit lazy val FormatAppTransfermodelsUpdateAppTransferBody: JsonFormat[AppTransfer.models.UpdateAppTransferBody] = jsonFormat1(AppTransfer.models.UpdateAppTransferBody.apply)
  implicit lazy val FormatAppTransfermodelsAppTransferRecipient: JsonFormat[AppTransfer.models.AppTransferRecipient] = jsonFormat2(AppTransfer.models.AppTransferRecipient.apply)
  implicit lazy val FormatAppTransfermodelsAppTransferOwner: JsonFormat[AppTransfer.models.AppTransferOwner] = jsonFormat2(AppTransfer.models.AppTransferOwner.apply)
  implicit lazy val FormatCollaboratormodelsCreateCollaboratorBody: JsonFormat[Collaborator.models.CreateCollaboratorBody] = jsonFormat2(Collaborator.models.CreateCollaboratorBody.apply)
  implicit lazy val FormatCollaboratormodelsCollaboratorUser: JsonFormat[Collaborator.models.CollaboratorUser] = jsonFormat2(Collaborator.models.CollaboratorUser.apply)
  implicit lazy val FormatDomainmodelsCreateDomainBody: JsonFormat[Domain.models.CreateDomainBody] = jsonFormat1(Domain.models.CreateDomainBody.apply)
  implicit lazy val FormatDynomodelsCreateDynoBody: JsonFormat[Dyno.models.CreateDynoBody] = jsonFormat4(Dyno.models.CreateDynoBody.apply)
  implicit lazy val FormatDynomodelsDynoRelease: JsonFormat[Dyno.models.DynoRelease] = jsonFormat2(Dyno.models.DynoRelease.apply)
  implicit lazy val FormatFormationmodelsBatchUpdateFormationBody: JsonFormat[Formation.models.BatchUpdateFormationBody] = jsonFormat1(Formation.models.BatchUpdateFormationBody.apply)
  implicit lazy val FormatFormationmodelsUpdateFormationBody: JsonFormat[Formation.models.UpdateFormationBody] = jsonFormat2(Formation.models.UpdateFormationBody.apply)
  implicit lazy val FormatFormationmodelsFormationUpdate: JsonFormat[Formation.models.FormationUpdate] = jsonFormat3(Formation.models.FormationUpdate.apply)
  implicit lazy val FormatHerokuAppmodelsHerokuAppStack: JsonFormat[HerokuApp.models.HerokuAppStack] = jsonFormat2(HerokuApp.models.HerokuAppStack.apply)
  implicit lazy val FormatHerokuAppmodelsCreateHerokuAppBody: JsonFormat[HerokuApp.models.CreateHerokuAppBody] = jsonFormat3(HerokuApp.models.CreateHerokuAppBody.apply)
  implicit lazy val FormatHerokuAppmodelsUpdateHerokuAppBody: JsonFormat[HerokuApp.models.UpdateHerokuAppBody] = jsonFormat2(HerokuApp.models.UpdateHerokuAppBody.apply)
  implicit lazy val FormatHerokuAppmodelsHerokuAppRegion: JsonFormat[HerokuApp.models.HerokuAppRegion] = jsonFormat2(HerokuApp.models.HerokuAppRegion.apply)
  implicit lazy val FormatHerokuAppmodelsHerokuAppOwner: JsonFormat[HerokuApp.models.HerokuAppOwner] = jsonFormat2(HerokuApp.models.HerokuAppOwner.apply)
  implicit lazy val FormatKeymodelsCreateKeyBody: JsonFormat[Key.models.CreateKeyBody] = jsonFormat1(Key.models.CreateKeyBody.apply)
  implicit lazy val FormatLogDrainmodelsCreateLogDrainBody: JsonFormat[LogDrain.models.CreateLogDrainBody] = jsonFormat1(LogDrain.models.CreateLogDrainBody.apply)
  implicit lazy val FormatLogSessionmodelsCreateLogSessionBody: JsonFormat[LogSession.models.CreateLogSessionBody] = jsonFormat4(LogSession.models.CreateLogSessionBody.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsCreateOAuthAuthorizationBody: JsonFormat[OAuthAuthorization.models.CreateOAuthAuthorizationBody] = jsonFormat4(OAuthAuthorization.models.CreateOAuthAuthorizationBody.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationAccessToken: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationAccessToken] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationAccessToken.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationRefreshToken: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationRefreshToken] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationRefreshToken.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationClient: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationClient] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationClient.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationGrant: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationGrant] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationGrant.apply)
  implicit lazy val FormatOAuthClientmodelsCreateOAuthClientBody: JsonFormat[OAuthClient.models.CreateOAuthClientBody] = jsonFormat2(OAuthClient.models.CreateOAuthClientBody.apply)
  implicit lazy val FormatOAuthClientmodelsUpdateOAuthClientBody: JsonFormat[OAuthClient.models.UpdateOAuthClientBody] = jsonFormat2(OAuthClient.models.UpdateOAuthClientBody.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenUser: JsonFormat[OAuthToken.models.OAuthTokenUser] = jsonFormat1(OAuthToken.models.OAuthTokenUser.apply)
  implicit lazy val FormatOAuthTokenmodelsCreateOAuthTokenBody: JsonFormat[OAuthToken.models.CreateOAuthTokenBody] = jsonFormat3(OAuthToken.models.CreateOAuthTokenBody.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenAccessToken: JsonFormat[OAuthToken.models.OAuthTokenAccessToken] = jsonFormat3(OAuthToken.models.OAuthTokenAccessToken.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenRefreshToken: JsonFormat[OAuthToken.models.OAuthTokenRefreshToken] = jsonFormat3(OAuthToken.models.OAuthTokenRefreshToken.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenAuthorization: JsonFormat[OAuthToken.models.OAuthTokenAuthorization] = jsonFormat1(OAuthToken.models.OAuthTokenAuthorization.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenClient: JsonFormat[OAuthToken.models.OAuthTokenClient] = jsonFormat1(OAuthToken.models.OAuthTokenClient.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenGrant: JsonFormat[OAuthToken.models.OAuthTokenGrant] = jsonFormat2(OAuthToken.models.OAuthTokenGrant.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenSession: JsonFormat[OAuthToken.models.OAuthTokenSession] = jsonFormat1(OAuthToken.models.OAuthTokenSession.apply)
  implicit lazy val FormatPlanmodelsPlanPrice: JsonFormat[Plan.models.PlanPrice] = jsonFormat2(Plan.models.PlanPrice.apply)
  implicit lazy val FormatReleasemodelsReleaseSlug: JsonFormat[Release.models.ReleaseSlug] = jsonFormat1(Release.models.ReleaseSlug.apply)
  implicit lazy val FormatReleasemodelsCreateReleaseBody: JsonFormat[Release.models.CreateReleaseBody] = jsonFormat2(Release.models.CreateReleaseBody.apply)
  implicit lazy val FormatReleasemodelsRollbackReleaseBody: JsonFormat[Release.models.RollbackReleaseBody] = jsonFormat1(Release.models.RollbackReleaseBody.apply)
  implicit lazy val FormatReleasemodelsReleaseUser: JsonFormat[Release.models.ReleaseUser] = jsonFormat2(Release.models.ReleaseUser.apply)
  implicit lazy val FormatSlugmodelsCreateSlugBody: JsonFormat[Slug.models.CreateSlugBody] = jsonFormat2(Slug.models.CreateSlugBody.apply)
  implicit lazy val FormatSlugmodelsSlugBlob: JsonFormat[Slug.models.SlugBlob] = jsonFormat2(Slug.models.SlugBlob.apply)
  implicit lazy val FormatSslEndpointmodelsCreateSslEndpointBody: JsonFormat[SslEndpoint.models.CreateSslEndpointBody] = jsonFormat2(SslEndpoint.models.CreateSslEndpointBody.apply)
  implicit lazy val FormatSslEndpointmodelsUpdateSslEndpointBody: JsonFormat[SslEndpoint.models.UpdateSslEndpointBody] = jsonFormat3(SslEndpoint.models.UpdateSslEndpointBody.apply)
  implicit lazy val ToJsonUpdateAccountBody: ToJson[Account.models.UpdateAccountBody] = to[Account.models.UpdateAccountBody]
  implicit lazy val ToJsonChangeEmailAccountBody: ToJson[Account.models.ChangeEmailAccountBody] = to[Account.models.ChangeEmailAccountBody]
  implicit lazy val ToJsonChangePasswordAccountBody: ToJson[Account.models.ChangePasswordAccountBody] = to[Account.models.ChangePasswordAccountBody]
  implicit lazy val ToJsonUpdateAccountFeatureBody: ToJson[AccountFeature.models.UpdateAccountFeatureBody] = to[AccountFeature.models.UpdateAccountFeatureBody]
  implicit lazy val ToJsonAddonPlan: ToJson[Addon.models.AddonPlan] = to[Addon.models.AddonPlan]
  implicit lazy val ToJsonCreateAddonBody: ToJson[Addon.models.CreateAddonBody] = to[Addon.models.CreateAddonBody]
  implicit lazy val ToJsonUpdateAddonBody: ToJson[Addon.models.UpdateAddonBody] = to[Addon.models.UpdateAddonBody]
  implicit lazy val ToJsonUpdateAppFeatureBody: ToJson[AppFeature.models.UpdateAppFeatureBody] = to[AppFeature.models.UpdateAppFeatureBody]
  implicit lazy val ToJsonAppTransferApp: ToJson[AppTransfer.models.AppTransferApp] = to[AppTransfer.models.AppTransferApp]
  implicit lazy val ToJsonCreateAppTransferBody: ToJson[AppTransfer.models.CreateAppTransferBody] = to[AppTransfer.models.CreateAppTransferBody]
  implicit lazy val ToJsonUpdateAppTransferBody: ToJson[AppTransfer.models.UpdateAppTransferBody] = to[AppTransfer.models.UpdateAppTransferBody]
  implicit lazy val ToJsonAppTransferRecipient: ToJson[AppTransfer.models.AppTransferRecipient] = to[AppTransfer.models.AppTransferRecipient]
  implicit lazy val ToJsonAppTransferOwner: ToJson[AppTransfer.models.AppTransferOwner] = to[AppTransfer.models.AppTransferOwner]
  implicit lazy val ToJsonCreateCollaboratorBody: ToJson[Collaborator.models.CreateCollaboratorBody] = to[Collaborator.models.CreateCollaboratorBody]
  implicit lazy val ToJsonCollaboratorUser: ToJson[Collaborator.models.CollaboratorUser] = to[Collaborator.models.CollaboratorUser]
  implicit lazy val ToJsonCreateDomainBody: ToJson[Domain.models.CreateDomainBody] = to[Domain.models.CreateDomainBody]
  implicit lazy val ToJsonCreateDynoBody: ToJson[Dyno.models.CreateDynoBody] = to[Dyno.models.CreateDynoBody]
  implicit lazy val ToJsonDynoRelease: ToJson[Dyno.models.DynoRelease] = to[Dyno.models.DynoRelease]
  implicit lazy val ToJsonBatchUpdateFormationBody: ToJson[Formation.models.BatchUpdateFormationBody] = to[Formation.models.BatchUpdateFormationBody]
  implicit lazy val ToJsonUpdateFormationBody: ToJson[Formation.models.UpdateFormationBody] = to[Formation.models.UpdateFormationBody]
  implicit lazy val ToJsonFormationUpdate: ToJson[Formation.models.FormationUpdate] = to[Formation.models.FormationUpdate]
  implicit lazy val ToJsonHerokuAppStack: ToJson[HerokuApp.models.HerokuAppStack] = to[HerokuApp.models.HerokuAppStack]
  implicit lazy val ToJsonCreateHerokuAppBody: ToJson[HerokuApp.models.CreateHerokuAppBody] = to[HerokuApp.models.CreateHerokuAppBody]
  implicit lazy val ToJsonUpdateHerokuAppBody: ToJson[HerokuApp.models.UpdateHerokuAppBody] = to[HerokuApp.models.UpdateHerokuAppBody]
  implicit lazy val ToJsonHerokuAppRegion: ToJson[HerokuApp.models.HerokuAppRegion] = to[HerokuApp.models.HerokuAppRegion]
  implicit lazy val ToJsonHerokuAppOwner: ToJson[HerokuApp.models.HerokuAppOwner] = to[HerokuApp.models.HerokuAppOwner]
  implicit lazy val ToJsonCreateKeyBody: ToJson[Key.models.CreateKeyBody] = to[Key.models.CreateKeyBody]
  implicit lazy val ToJsonCreateLogDrainBody: ToJson[LogDrain.models.CreateLogDrainBody] = to[LogDrain.models.CreateLogDrainBody]
  implicit lazy val ToJsonCreateLogSessionBody: ToJson[LogSession.models.CreateLogSessionBody] = to[LogSession.models.CreateLogSessionBody]
  implicit lazy val ToJsonCreateOAuthAuthorizationBody: ToJson[OAuthAuthorization.models.CreateOAuthAuthorizationBody] = to[OAuthAuthorization.models.CreateOAuthAuthorizationBody]
  implicit lazy val ToJsonOAuthAuthorizationAccessToken: ToJson[OAuthAuthorization.models.OAuthAuthorizationAccessToken] = to[OAuthAuthorization.models.OAuthAuthorizationAccessToken]
  implicit lazy val ToJsonOAuthAuthorizationRefreshToken: ToJson[OAuthAuthorization.models.OAuthAuthorizationRefreshToken] = to[OAuthAuthorization.models.OAuthAuthorizationRefreshToken]
  implicit lazy val ToJsonOAuthAuthorizationClient: ToJson[OAuthAuthorization.models.OAuthAuthorizationClient] = to[OAuthAuthorization.models.OAuthAuthorizationClient]
  implicit lazy val ToJsonOAuthAuthorizationGrant: ToJson[OAuthAuthorization.models.OAuthAuthorizationGrant] = to[OAuthAuthorization.models.OAuthAuthorizationGrant]
  implicit lazy val ToJsonCreateOAuthClientBody: ToJson[OAuthClient.models.CreateOAuthClientBody] = to[OAuthClient.models.CreateOAuthClientBody]
  implicit lazy val ToJsonUpdateOAuthClientBody: ToJson[OAuthClient.models.UpdateOAuthClientBody] = to[OAuthClient.models.UpdateOAuthClientBody]
  implicit lazy val ToJsonOAuthTokenUser: ToJson[OAuthToken.models.OAuthTokenUser] = to[OAuthToken.models.OAuthTokenUser]
  implicit lazy val ToJsonCreateOAuthTokenBody: ToJson[OAuthToken.models.CreateOAuthTokenBody] = to[OAuthToken.models.CreateOAuthTokenBody]
  implicit lazy val ToJsonOAuthTokenAccessToken: ToJson[OAuthToken.models.OAuthTokenAccessToken] = to[OAuthToken.models.OAuthTokenAccessToken]
  implicit lazy val ToJsonOAuthTokenRefreshToken: ToJson[OAuthToken.models.OAuthTokenRefreshToken] = to[OAuthToken.models.OAuthTokenRefreshToken]
  implicit lazy val ToJsonOAuthTokenAuthorization: ToJson[OAuthToken.models.OAuthTokenAuthorization] = to[OAuthToken.models.OAuthTokenAuthorization]
  implicit lazy val ToJsonOAuthTokenClient: ToJson[OAuthToken.models.OAuthTokenClient] = to[OAuthToken.models.OAuthTokenClient]
  implicit lazy val ToJsonOAuthTokenGrant: ToJson[OAuthToken.models.OAuthTokenGrant] = to[OAuthToken.models.OAuthTokenGrant]
  implicit lazy val ToJsonOAuthTokenSession: ToJson[OAuthToken.models.OAuthTokenSession] = to[OAuthToken.models.OAuthTokenSession]
  implicit lazy val ToJsonPlanPrice: ToJson[Plan.models.PlanPrice] = to[Plan.models.PlanPrice]
  implicit lazy val ToJsonReleaseSlug: ToJson[Release.models.ReleaseSlug] = to[Release.models.ReleaseSlug]
  implicit lazy val ToJsonCreateReleaseBody: ToJson[Release.models.CreateReleaseBody] = to[Release.models.CreateReleaseBody]
  implicit lazy val ToJsonRollbackReleaseBody: ToJson[Release.models.RollbackReleaseBody] = to[Release.models.RollbackReleaseBody]
  implicit lazy val ToJsonReleaseUser: ToJson[Release.models.ReleaseUser] = to[Release.models.ReleaseUser]
  implicit lazy val ToJsonCreateSlugBody: ToJson[Slug.models.CreateSlugBody] = to[Slug.models.CreateSlugBody]
  implicit lazy val ToJsonSlugBlob: ToJson[Slug.models.SlugBlob] = to[Slug.models.SlugBlob]
  implicit lazy val ToJsonCreateSslEndpointBody: ToJson[SslEndpoint.models.CreateSslEndpointBody] = to[SslEndpoint.models.CreateSslEndpointBody]
  implicit lazy val ToJsonUpdateSslEndpointBody: ToJson[SslEndpoint.models.UpdateSslEndpointBody] = to[SslEndpoint.models.UpdateSslEndpointBody]
  implicit lazy val ToJsonNullSafeConfigVar: ToJson[Map[String, Option[String]]] = to[Map[String, Option[String]]]
  implicit lazy val ToJsonConfigVar: ToJson[Map[String, String]] = new ToJson[Map[String, String]] {
    def toJson(t: Map[String, String]) = ToJsonNullSafeConfigVar.toJson(t map {
      case (k, v) => k -> Option(v)
    })
  }
  def to[T](implicit f: JsonFormat[T]) = new ToJson[T] {
    def toJson(t: T) = t.toJson.compactPrint
  }
}

object SprayJsonIgnoreNullBoilerplate extends SprayJsonIgnoreNullBoilerplate

trait SprayJsonBoilerplate extends DefaultJsonProtocol with NullOptions with ApiRequestJson with ApiResponseJson {
  implicit lazy val FormatErrorResponse: JsonFormat[ErrorResponse] = jsonFormat2(ErrorResponse.apply)
  implicit lazy val FormatAccount: JsonFormat[Account] = jsonFormat8(Account.apply)
  implicit lazy val FormatAccountFeature: JsonFormat[AccountFeature] = jsonFormat8(AccountFeature.apply)
  implicit lazy val FormatAddonmodelsAddonPlan: JsonFormat[Addon.models.AddonPlan] = jsonFormat2(Addon.models.AddonPlan.apply)
  implicit lazy val FormatAddon: JsonFormat[Addon] = jsonFormat6(Addon.apply)
  implicit lazy val FormatAddonService: JsonFormat[AddonService] = jsonFormat4(AddonService.apply)
  implicit lazy val FormatAppFeature: JsonFormat[AppFeature] = jsonFormat8(AppFeature.apply)
  implicit lazy val FormatAppTransfermodelsAppTransferRecipient: JsonFormat[AppTransfer.models.AppTransferRecipient] = jsonFormat2(AppTransfer.models.AppTransferRecipient.apply)
  implicit lazy val FormatAppTransfermodelsAppTransferApp: JsonFormat[AppTransfer.models.AppTransferApp] = jsonFormat2(AppTransfer.models.AppTransferApp.apply)
  implicit lazy val FormatAppTransfermodelsAppTransferOwner: JsonFormat[AppTransfer.models.AppTransferOwner] = jsonFormat2(AppTransfer.models.AppTransferOwner.apply)
  implicit lazy val FormatAppTransfer: JsonFormat[AppTransfer] = jsonFormat7(AppTransfer.apply)
  implicit lazy val FormatCollaboratormodelsCollaboratorUser: JsonFormat[Collaborator.models.CollaboratorUser] = jsonFormat2(Collaborator.models.CollaboratorUser.apply)
  implicit lazy val FormatCollaborator: JsonFormat[Collaborator] = jsonFormat4(Collaborator.apply)
  implicit lazy val FormatDomain: JsonFormat[Domain] = jsonFormat4(Domain.apply)
  implicit lazy val FormatDynomodelsDynoRelease: JsonFormat[Dyno.models.DynoRelease] = jsonFormat2(Dyno.models.DynoRelease.apply)
  implicit lazy val FormatDyno: JsonFormat[Dyno] = jsonFormat10(Dyno.apply)
  implicit lazy val FormatFormation: JsonFormat[Formation] = jsonFormat7(Formation.apply)
  implicit lazy val FormatHerokuAppmodelsHerokuAppStack: JsonFormat[HerokuApp.models.HerokuAppStack] = jsonFormat2(HerokuApp.models.HerokuAppStack.apply)
  implicit lazy val FormatHerokuAppmodelsHerokuAppRegion: JsonFormat[HerokuApp.models.HerokuAppRegion] = jsonFormat2(HerokuApp.models.HerokuAppRegion.apply)
  implicit lazy val FormatHerokuAppmodelsHerokuAppOwner: JsonFormat[HerokuApp.models.HerokuAppOwner] = jsonFormat2(HerokuApp.models.HerokuAppOwner.apply)
  implicit lazy val FormatHerokuApp: JsonFormat[HerokuApp] = jsonFormat15(HerokuApp.apply)
  implicit lazy val FormatKey: JsonFormat[Key] = jsonFormat6(Key.apply)
  implicit lazy val FormatLogDrain: JsonFormat[LogDrain] = jsonFormat6(LogDrain.apply)
  implicit lazy val FormatLogSession: JsonFormat[LogSession] = jsonFormat4(LogSession.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationAccessToken: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationAccessToken] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationAccessToken.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationRefreshToken: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationRefreshToken] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationRefreshToken.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationClient: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationClient] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationClient.apply)
  implicit lazy val FormatOAuthAuthorizationmodelsOAuthAuthorizationGrant: JsonFormat[OAuthAuthorization.models.OAuthAuthorizationGrant] = jsonFormat3(OAuthAuthorization.models.OAuthAuthorizationGrant.apply)
  implicit lazy val FormatOAuthAuthorization: JsonFormat[OAuthAuthorization] = jsonFormat8(OAuthAuthorization.apply)
  implicit lazy val FormatOAuthClient: JsonFormat[OAuthClient] = jsonFormat7(OAuthClient.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenAccessToken: JsonFormat[OAuthToken.models.OAuthTokenAccessToken] = jsonFormat3(OAuthToken.models.OAuthTokenAccessToken.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenRefreshToken: JsonFormat[OAuthToken.models.OAuthTokenRefreshToken] = jsonFormat3(OAuthToken.models.OAuthTokenRefreshToken.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenAuthorization: JsonFormat[OAuthToken.models.OAuthTokenAuthorization] = jsonFormat1(OAuthToken.models.OAuthTokenAuthorization.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenClient: JsonFormat[OAuthToken.models.OAuthTokenClient] = jsonFormat1(OAuthToken.models.OAuthTokenClient.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenGrant: JsonFormat[OAuthToken.models.OAuthTokenGrant] = jsonFormat2(OAuthToken.models.OAuthTokenGrant.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenSession: JsonFormat[OAuthToken.models.OAuthTokenSession] = jsonFormat1(OAuthToken.models.OAuthTokenSession.apply)
  implicit lazy val FormatOAuthTokenmodelsOAuthTokenUser: JsonFormat[OAuthToken.models.OAuthTokenUser] = jsonFormat1(OAuthToken.models.OAuthTokenUser.apply)
  implicit lazy val FormatOAuthToken: JsonFormat[OAuthToken] = jsonFormat10(OAuthToken.apply)
  implicit lazy val FormatPlanmodelsPlanPrice: JsonFormat[Plan.models.PlanPrice] = jsonFormat2(Plan.models.PlanPrice.apply)
  implicit lazy val FormatPlan: JsonFormat[Plan] = jsonFormat8(Plan.apply)
  implicit lazy val FormatRateLimit: JsonFormat[RateLimit] = jsonFormat1(RateLimit.apply)
  implicit lazy val FormatRegion: JsonFormat[Region] = jsonFormat5(Region.apply)
  implicit lazy val FormatReleasemodelsReleaseSlug: JsonFormat[Release.models.ReleaseSlug] = jsonFormat1(Release.models.ReleaseSlug.apply)
  implicit lazy val FormatReleasemodelsReleaseUser: JsonFormat[Release.models.ReleaseUser] = jsonFormat2(Release.models.ReleaseUser.apply)
  implicit lazy val FormatRelease: JsonFormat[Release] = jsonFormat7(Release.apply)
  implicit lazy val FormatSlugmodelsSlugBlob: JsonFormat[Slug.models.SlugBlob] = jsonFormat2(Slug.models.SlugBlob.apply)
  implicit lazy val FormatSlug: JsonFormat[Slug] = jsonFormat6(Slug.apply)
  implicit lazy val FormatSslEndpoint: JsonFormat[SslEndpoint] = jsonFormat6(SslEndpoint.apply)
  implicit lazy val FormatStack: JsonFormat[Stack] = jsonFormat5(Stack.apply)
  implicit lazy val ToJsonUpdateAccountBody: ToJson[Account.models.UpdateAccountBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateAccountBody
  implicit lazy val ToJsonChangeEmailAccountBody: ToJson[Account.models.ChangeEmailAccountBody] = SprayJsonIgnoreNullBoilerplate.ToJsonChangeEmailAccountBody
  implicit lazy val ToJsonChangePasswordAccountBody: ToJson[Account.models.ChangePasswordAccountBody] = SprayJsonIgnoreNullBoilerplate.ToJsonChangePasswordAccountBody
  implicit lazy val ToJsonUpdateAccountFeatureBody: ToJson[AccountFeature.models.UpdateAccountFeatureBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateAccountFeatureBody
  implicit lazy val ToJsonAddonPlan: ToJson[Addon.models.AddonPlan] = SprayJsonIgnoreNullBoilerplate.ToJsonAddonPlan
  implicit lazy val ToJsonCreateAddonBody: ToJson[Addon.models.CreateAddonBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateAddonBody
  implicit lazy val ToJsonUpdateAddonBody: ToJson[Addon.models.UpdateAddonBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateAddonBody
  implicit lazy val ToJsonUpdateAppFeatureBody: ToJson[AppFeature.models.UpdateAppFeatureBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateAppFeatureBody
  implicit lazy val ToJsonAppTransferApp: ToJson[AppTransfer.models.AppTransferApp] = SprayJsonIgnoreNullBoilerplate.ToJsonAppTransferApp
  implicit lazy val ToJsonCreateAppTransferBody: ToJson[AppTransfer.models.CreateAppTransferBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateAppTransferBody
  implicit lazy val ToJsonUpdateAppTransferBody: ToJson[AppTransfer.models.UpdateAppTransferBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateAppTransferBody
  implicit lazy val ToJsonAppTransferRecipient: ToJson[AppTransfer.models.AppTransferRecipient] = SprayJsonIgnoreNullBoilerplate.ToJsonAppTransferRecipient
  implicit lazy val ToJsonAppTransferOwner: ToJson[AppTransfer.models.AppTransferOwner] = SprayJsonIgnoreNullBoilerplate.ToJsonAppTransferOwner
  implicit lazy val ToJsonCreateCollaboratorBody: ToJson[Collaborator.models.CreateCollaboratorBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateCollaboratorBody
  implicit lazy val ToJsonCollaboratorUser: ToJson[Collaborator.models.CollaboratorUser] = SprayJsonIgnoreNullBoilerplate.ToJsonCollaboratorUser
  implicit lazy val ToJsonCreateDomainBody: ToJson[Domain.models.CreateDomainBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateDomainBody
  implicit lazy val ToJsonCreateDynoBody: ToJson[Dyno.models.CreateDynoBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateDynoBody
  implicit lazy val ToJsonDynoRelease: ToJson[Dyno.models.DynoRelease] = SprayJsonIgnoreNullBoilerplate.ToJsonDynoRelease
  implicit lazy val ToJsonBatchUpdateFormationBody: ToJson[Formation.models.BatchUpdateFormationBody] = SprayJsonIgnoreNullBoilerplate.ToJsonBatchUpdateFormationBody
  implicit lazy val ToJsonUpdateFormationBody: ToJson[Formation.models.UpdateFormationBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateFormationBody
  implicit lazy val ToJsonFormationUpdate: ToJson[Formation.models.FormationUpdate] = SprayJsonIgnoreNullBoilerplate.ToJsonFormationUpdate
  implicit lazy val ToJsonHerokuAppStack: ToJson[HerokuApp.models.HerokuAppStack] = SprayJsonIgnoreNullBoilerplate.ToJsonHerokuAppStack
  implicit lazy val ToJsonCreateHerokuAppBody: ToJson[HerokuApp.models.CreateHerokuAppBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateHerokuAppBody
  implicit lazy val ToJsonUpdateHerokuAppBody: ToJson[HerokuApp.models.UpdateHerokuAppBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateHerokuAppBody
  implicit lazy val ToJsonHerokuAppRegion: ToJson[HerokuApp.models.HerokuAppRegion] = SprayJsonIgnoreNullBoilerplate.ToJsonHerokuAppRegion
  implicit lazy val ToJsonHerokuAppOwner: ToJson[HerokuApp.models.HerokuAppOwner] = SprayJsonIgnoreNullBoilerplate.ToJsonHerokuAppOwner
  implicit lazy val ToJsonCreateKeyBody: ToJson[Key.models.CreateKeyBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateKeyBody
  implicit lazy val ToJsonCreateLogDrainBody: ToJson[LogDrain.models.CreateLogDrainBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateLogDrainBody
  implicit lazy val ToJsonCreateLogSessionBody: ToJson[LogSession.models.CreateLogSessionBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateLogSessionBody
  implicit lazy val ToJsonCreateOAuthAuthorizationBody: ToJson[OAuthAuthorization.models.CreateOAuthAuthorizationBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateOAuthAuthorizationBody
  implicit lazy val ToJsonOAuthAuthorizationAccessToken: ToJson[OAuthAuthorization.models.OAuthAuthorizationAccessToken] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthAuthorizationAccessToken
  implicit lazy val ToJsonOAuthAuthorizationRefreshToken: ToJson[OAuthAuthorization.models.OAuthAuthorizationRefreshToken] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthAuthorizationRefreshToken
  implicit lazy val ToJsonOAuthAuthorizationClient: ToJson[OAuthAuthorization.models.OAuthAuthorizationClient] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthAuthorizationClient
  implicit lazy val ToJsonOAuthAuthorizationGrant: ToJson[OAuthAuthorization.models.OAuthAuthorizationGrant] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthAuthorizationGrant
  implicit lazy val ToJsonCreateOAuthClientBody: ToJson[OAuthClient.models.CreateOAuthClientBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateOAuthClientBody
  implicit lazy val ToJsonUpdateOAuthClientBody: ToJson[OAuthClient.models.UpdateOAuthClientBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateOAuthClientBody
  implicit lazy val ToJsonOAuthTokenUser: ToJson[OAuthToken.models.OAuthTokenUser] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthTokenUser
  implicit lazy val ToJsonCreateOAuthTokenBody: ToJson[OAuthToken.models.CreateOAuthTokenBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateOAuthTokenBody
  implicit lazy val ToJsonOAuthTokenAccessToken: ToJson[OAuthToken.models.OAuthTokenAccessToken] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthTokenAccessToken
  implicit lazy val ToJsonOAuthTokenRefreshToken: ToJson[OAuthToken.models.OAuthTokenRefreshToken] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthTokenRefreshToken
  implicit lazy val ToJsonOAuthTokenAuthorization: ToJson[OAuthToken.models.OAuthTokenAuthorization] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthTokenAuthorization
  implicit lazy val ToJsonOAuthTokenClient: ToJson[OAuthToken.models.OAuthTokenClient] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthTokenClient
  implicit lazy val ToJsonOAuthTokenGrant: ToJson[OAuthToken.models.OAuthTokenGrant] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthTokenGrant
  implicit lazy val ToJsonOAuthTokenSession: ToJson[OAuthToken.models.OAuthTokenSession] = SprayJsonIgnoreNullBoilerplate.ToJsonOAuthTokenSession
  implicit lazy val ToJsonPlanPrice: ToJson[Plan.models.PlanPrice] = SprayJsonIgnoreNullBoilerplate.ToJsonPlanPrice
  implicit lazy val ToJsonReleaseSlug: ToJson[Release.models.ReleaseSlug] = SprayJsonIgnoreNullBoilerplate.ToJsonReleaseSlug
  implicit lazy val ToJsonCreateReleaseBody: ToJson[Release.models.CreateReleaseBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateReleaseBody
  implicit lazy val ToJsonRollbackReleaseBody: ToJson[Release.models.RollbackReleaseBody] = SprayJsonIgnoreNullBoilerplate.ToJsonRollbackReleaseBody
  implicit lazy val ToJsonReleaseUser: ToJson[Release.models.ReleaseUser] = SprayJsonIgnoreNullBoilerplate.ToJsonReleaseUser
  implicit lazy val ToJsonCreateSlugBody: ToJson[Slug.models.CreateSlugBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateSlugBody
  implicit lazy val ToJsonSlugBlob: ToJson[Slug.models.SlugBlob] = SprayJsonIgnoreNullBoilerplate.ToJsonSlugBlob
  implicit lazy val ToJsonCreateSslEndpointBody: ToJson[SslEndpoint.models.CreateSslEndpointBody] = SprayJsonIgnoreNullBoilerplate.ToJsonCreateSslEndpointBody
  implicit lazy val ToJsonUpdateSslEndpointBody: ToJson[SslEndpoint.models.UpdateSslEndpointBody] = SprayJsonIgnoreNullBoilerplate.ToJsonUpdateSslEndpointBody
  implicit lazy val ToJsonConfigVar: ToJson[Map[String, String]] = SprayJsonIgnoreNullBoilerplate.ToJsonConfigVar
  implicit lazy val FromJsonErrorResponse: FromJson[ErrorResponse] = from[ErrorResponse]
  implicit lazy val FromJsonConfigVar: FromJson[Map[String,String]] = from[Map[String,String]]
  implicit lazy val FromJsonAccount: FromJson[Account] = from[Account]
  implicit lazy val FromJsonListAccount: FromJson[List[Account]] = from[List[Account]]
  implicit lazy val FromJsonAccountFeature: FromJson[AccountFeature] = from[AccountFeature]
  implicit lazy val FromJsonListAccountFeature: FromJson[List[AccountFeature]] = from[List[AccountFeature]]
  implicit lazy val FromJsonAddonPlan: FromJson[Addon.models.AddonPlan] = from[Addon.models.AddonPlan]
  implicit lazy val FromJsonAddon: FromJson[Addon] = from[Addon]
  implicit lazy val FromJsonListAddon: FromJson[List[Addon]] = from[List[Addon]]
  implicit lazy val FromJsonAddonService: FromJson[AddonService] = from[AddonService]
  implicit lazy val FromJsonListAddonService: FromJson[List[AddonService]] = from[List[AddonService]]
  implicit lazy val FromJsonAppFeature: FromJson[AppFeature] = from[AppFeature]
  implicit lazy val FromJsonListAppFeature: FromJson[List[AppFeature]] = from[List[AppFeature]]
  implicit lazy val FromJsonAppTransferRecipient: FromJson[AppTransfer.models.AppTransferRecipient] = from[AppTransfer.models.AppTransferRecipient]
  implicit lazy val FromJsonAppTransferApp: FromJson[AppTransfer.models.AppTransferApp] = from[AppTransfer.models.AppTransferApp]
  implicit lazy val FromJsonAppTransferOwner: FromJson[AppTransfer.models.AppTransferOwner] = from[AppTransfer.models.AppTransferOwner]
  implicit lazy val FromJsonAppTransfer: FromJson[AppTransfer] = from[AppTransfer]
  implicit lazy val FromJsonListAppTransfer: FromJson[List[AppTransfer]] = from[List[AppTransfer]]
  implicit lazy val FromJsonCollaboratorUser: FromJson[Collaborator.models.CollaboratorUser] = from[Collaborator.models.CollaboratorUser]
  implicit lazy val FromJsonCollaborator: FromJson[Collaborator] = from[Collaborator]
  implicit lazy val FromJsonListCollaborator: FromJson[List[Collaborator]] = from[List[Collaborator]]
  implicit lazy val FromJsonDomain: FromJson[Domain] = from[Domain]
  implicit lazy val FromJsonListDomain: FromJson[List[Domain]] = from[List[Domain]]
  implicit lazy val FromJsonDynoRelease: FromJson[Dyno.models.DynoRelease] = from[Dyno.models.DynoRelease]
  implicit lazy val FromJsonDyno: FromJson[Dyno] = from[Dyno]
  implicit lazy val FromJsonListDyno: FromJson[List[Dyno]] = from[List[Dyno]]
  implicit lazy val FromJsonFormation: FromJson[Formation] = from[Formation]
  implicit lazy val FromJsonListFormation: FromJson[List[Formation]] = from[List[Formation]]
  implicit lazy val FromJsonHerokuAppStack: FromJson[HerokuApp.models.HerokuAppStack] = from[HerokuApp.models.HerokuAppStack]
  implicit lazy val FromJsonHerokuAppRegion: FromJson[HerokuApp.models.HerokuAppRegion] = from[HerokuApp.models.HerokuAppRegion]
  implicit lazy val FromJsonHerokuAppOwner: FromJson[HerokuApp.models.HerokuAppOwner] = from[HerokuApp.models.HerokuAppOwner]
  implicit lazy val FromJsonHerokuApp: FromJson[HerokuApp] = from[HerokuApp]
  implicit lazy val FromJsonListHerokuApp: FromJson[List[HerokuApp]] = from[List[HerokuApp]]
  implicit lazy val FromJsonKey: FromJson[Key] = from[Key]
  implicit lazy val FromJsonListKey: FromJson[List[Key]] = from[List[Key]]
  implicit lazy val FromJsonLogDrain: FromJson[LogDrain] = from[LogDrain]
  implicit lazy val FromJsonListLogDrain: FromJson[List[LogDrain]] = from[List[LogDrain]]
  implicit lazy val FromJsonLogSession: FromJson[LogSession] = from[LogSession]
  implicit lazy val FromJsonListLogSession: FromJson[List[LogSession]] = from[List[LogSession]]
  implicit lazy val FromJsonOAuthAuthorizationAccessToken: FromJson[OAuthAuthorization.models.OAuthAuthorizationAccessToken] = from[OAuthAuthorization.models.OAuthAuthorizationAccessToken]
  implicit lazy val FromJsonOAuthAuthorizationRefreshToken: FromJson[OAuthAuthorization.models.OAuthAuthorizationRefreshToken] = from[OAuthAuthorization.models.OAuthAuthorizationRefreshToken]
  implicit lazy val FromJsonOAuthAuthorizationClient: FromJson[OAuthAuthorization.models.OAuthAuthorizationClient] = from[OAuthAuthorization.models.OAuthAuthorizationClient]
  implicit lazy val FromJsonOAuthAuthorizationGrant: FromJson[OAuthAuthorization.models.OAuthAuthorizationGrant] = from[OAuthAuthorization.models.OAuthAuthorizationGrant]
  implicit lazy val FromJsonOAuthAuthorization: FromJson[OAuthAuthorization] = from[OAuthAuthorization]
  implicit lazy val FromJsonListOAuthAuthorization: FromJson[List[OAuthAuthorization]] = from[List[OAuthAuthorization]]
  implicit lazy val FromJsonOAuthClient: FromJson[OAuthClient] = from[OAuthClient]
  implicit lazy val FromJsonListOAuthClient: FromJson[List[OAuthClient]] = from[List[OAuthClient]]
  implicit lazy val FromJsonOAuthTokenAccessToken: FromJson[OAuthToken.models.OAuthTokenAccessToken] = from[OAuthToken.models.OAuthTokenAccessToken]
  implicit lazy val FromJsonOAuthTokenRefreshToken: FromJson[OAuthToken.models.OAuthTokenRefreshToken] = from[OAuthToken.models.OAuthTokenRefreshToken]
  implicit lazy val FromJsonOAuthTokenAuthorization: FromJson[OAuthToken.models.OAuthTokenAuthorization] = from[OAuthToken.models.OAuthTokenAuthorization]
  implicit lazy val FromJsonOAuthTokenClient: FromJson[OAuthToken.models.OAuthTokenClient] = from[OAuthToken.models.OAuthTokenClient]
  implicit lazy val FromJsonOAuthTokenGrant: FromJson[OAuthToken.models.OAuthTokenGrant] = from[OAuthToken.models.OAuthTokenGrant]
  implicit lazy val FromJsonOAuthTokenSession: FromJson[OAuthToken.models.OAuthTokenSession] = from[OAuthToken.models.OAuthTokenSession]
  implicit lazy val FromJsonOAuthTokenUser: FromJson[OAuthToken.models.OAuthTokenUser] = from[OAuthToken.models.OAuthTokenUser]
  implicit lazy val FromJsonOAuthToken: FromJson[OAuthToken] = from[OAuthToken]
  implicit lazy val FromJsonListOAuthToken: FromJson[List[OAuthToken]] = from[List[OAuthToken]]
  implicit lazy val FromJsonPlanPrice: FromJson[Plan.models.PlanPrice] = from[Plan.models.PlanPrice]
  implicit lazy val FromJsonPlan: FromJson[Plan] = from[Plan]
  implicit lazy val FromJsonListPlan: FromJson[List[Plan]] = from[List[Plan]]
  implicit lazy val FromJsonRateLimit: FromJson[RateLimit] = from[RateLimit]
  implicit lazy val FromJsonListRateLimit: FromJson[List[RateLimit]] = from[List[RateLimit]]
  implicit lazy val FromJsonRegion: FromJson[Region] = from[Region]
  implicit lazy val FromJsonListRegion: FromJson[List[Region]] = from[List[Region]]
  implicit lazy val FromJsonReleaseSlug: FromJson[Release.models.ReleaseSlug] = from[Release.models.ReleaseSlug]
  implicit lazy val FromJsonReleaseUser: FromJson[Release.models.ReleaseUser] = from[Release.models.ReleaseUser]
  implicit lazy val FromJsonRelease: FromJson[Release] = from[Release]
  implicit lazy val FromJsonListRelease: FromJson[List[Release]] = from[List[Release]]
  implicit lazy val FromJsonSlugBlob: FromJson[Slug.models.SlugBlob] = from[Slug.models.SlugBlob]
  implicit lazy val FromJsonSlug: FromJson[Slug] = from[Slug]
  implicit lazy val FromJsonListSlug: FromJson[List[Slug]] = from[List[Slug]]
  implicit lazy val FromJsonSslEndpoint: FromJson[SslEndpoint] = from[SslEndpoint]
  implicit lazy val FromJsonListSslEndpoint: FromJson[List[SslEndpoint]] = from[List[SslEndpoint]]
  implicit lazy val FromJsonStack: FromJson[Stack] = from[Stack]
  implicit lazy val FromJsonListStack: FromJson[List[Stack]] = from[List[Stack]]
  def from[T](implicit t: JsonFormat[T]) = new FromJson[T] {
    def fromJson(json: String) =
      try {
        JsonParser(json).convertTo[T]
      } catch {
        case (e: DeserializationException) => {
          println(json)
          throw e
        }
      }
  }
}

object SprayJsonBoilerplate extends SprayJsonBoilerplate
